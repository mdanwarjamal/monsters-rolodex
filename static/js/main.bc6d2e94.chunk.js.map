{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","monster","className","name","alt","src","id","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","useState","setMonsters","searchText","setSearchText","useEffect","a","fetch","response","json","users","console","log","fetchUsers","filteredOutMonsters","filter","toLowerCase","includes","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"8SAEaA,G,MAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,sBAAKC,UAAU,iBAAf,UACE,6BAAKD,EAAQE,OACb,qBACEC,IAAI,UACJC,IAAG,+BAA0BJ,EAAQK,GAAlC,4BAEL,4BAAIL,EAAQM,aCNHC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtB,qBAAKP,UAAU,YAAf,SACGO,EAASC,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQK,WCJZK,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCCG,G,MArCH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACTR,EADS,KACCS,EADD,OAEoBD,mBAAS,IAF7B,mBAETE,EAFS,KAEGC,EAFH,KAKhBC,qBAAU,YACQ,uCAAG,8BAAAC,EAAA,+EAEQC,MAAM,8CAFd,cAETC,EAFS,gBAKKA,EAASC,OALd,OAKTC,EALS,OAMfR,EAAYQ,GANG,kDAQfC,QAAQC,IAAI,sBARG,0DAAH,qDAWhBC,KACC,IAEH,IAGMC,EADuBrB,EACoBsB,QAAO,SAAC9B,GAAD,OACtDA,EAAQE,KAAK6B,cAAcC,SAASd,EAAWa,kBAGjD,OACE,sBAAK9B,UAAU,MAAf,UACE,iCACE,oDAEF,cAAC,EAAD,CAAWU,YA7BK,oBA6BqBC,aAZpB,SAACqB,GAAD,OAAWd,EAAcc,EAAMC,OAAOC,UAavD,cAAC,EAAD,CAAU3B,SAAUqB,SClC1BO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bc6d2e94.chunk.js","sourcesContent":["import \"./card.styles.css\";\n\nexport const Card = ({ monster }) => (\n  <div className=\"card-container\">\n    <h1>{monster.name}</h1>\n    <img\n      alt=\"Monster\"\n      src={`https://robohash.org/${monster.id}?set=set2&size=160x180`}\n    />\n    <p>{monster.email}</p>\n  </div>\n);\n","import { Card } from \"../card/card.component\";\nimport \"./card-list.styles.css\";\n\nexport const CardList = ({ monsters }) => (\n  <div className=\"card-list\">\n    {monsters.map((monster) => (\n      <Card key={monster.id} monster={monster} />\n    ))}\n  </div>\n);\n","import \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import { useState, useEffect } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [monsters, setMonsters] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const placeholder = \"Search Monster...\";\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch(\n          `https://jsonplaceholder.typicode.com/users`\n        );\n        const users = await response.json();\n        setMonsters(users);\n      } catch (error) {\n        console.log(\"Some error occured\");\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  const handleChange = (event) => setSearchText(event.target.value);\n\n  const monstersToBeFiltered = monsters;\n  const filteredOutMonsters = monstersToBeFiltered.filter((monster) =>\n    monster.name.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Monsters Rolodex</h1>\n      </header>\n      <SearchBox placeholder={placeholder} handleChange={handleChange} />\n      <CardList monsters={filteredOutMonsters} />\n    </div>\n  );\n};\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}